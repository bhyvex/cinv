# 2011      Nico Schottelius (nico-sexy at schottelius.org)
#           Steven Armstrong (steven-sexy at armstrong.cc)
# 
# This file is part of sexy.
#
# sexy is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# sexy is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with sexy. If not, see <http://www.gnu.org/licenses/>.
#
#
# Global configuration variables and helper funcions used in all other scripts
#
# vim: set filetype=sh

################################################################################
# cconf standard vars prefixed with sexy
__sexy_pwd="$(pwd -P)"
__sexy_mydir="${0%/*}"
__sexy_abs_mydir="$(cd "$__sexy_mydir" && pwd -P)"
__sexy_myname="${0##*/}"
__sexy_abs_myname="$__sexy_abs_mydir/$__sexy_myname"


################################################################################
# Global variables

: ${__sexy_config_dir:="$HOME/.sexy"}

# Where to find/store the database
: ${SEXY_DB_DIR:="${__sexy_config_dir}/db"}
__sexy_db_abs_dir="$(cd "$SEXY_DB_DIR" && pwd -P)"


# TODO: make this prettier/more portable
__sexy_base_dir=$(cd "${__sexy_abs_mydir}/../"; pwd)
if [ -n "$SEXY_PLUGIN_PATH" ]; then
   SEXY_PLUGIN_PATH="$SEXY_PLUGIN_PATH:${__sexy_base_dir}/plugins"
else
   SEXY_PLUGIN_PATH="${__sexy_base_dir}/plugins"
fi


################################################################################
# Functions
#
__sexy_debug_echo()
{
   if [ "$__sexy_debug" ]; then
      echo "Debug: $@"
   fi
}

__sexy_exit_err()
{
   echo "$@"
   exit 1
}

__sexy_usage()
{
   __sexy_exit_err "${__sexy_myname}: $@"
}

__sexy_plugin_datadir()
{
   local plugin_datadir="${__sexy_config_dir}/data/${__sexy_plugin_name}"
   mkdir -p "$plugin_datadir"
   echo "$plugin_datadir"
}

__sexy_find_plugin_dir() {
   local plugin_name="$1"
   local path
   for path in $(echo "$SEXY_PLUGIN_PATH" | sed 's/[^\]:/\n/g'); do
      [ -d "$path/$plugin_name" ] && echo "$path/$plugin_name"
   done
}

# Require some command line parameters and allow optional parameters
# -atleast: have at least the given number of arguments, but allow more to be present
# -exact: have exactly the given number of arguments
# -optional: allow arguments to be missing
# -skip: skip previously found arguments
__sexy_args()
{
   count=0
   arglist=""
   sexy_args_exact="exact"
   sexy_args_skip="1"

   # get argument list
   while [ "$#" -gt 0 ]; do
      case "$1" in
         # Only allow exact number of arguments (normally allow more)
         -atleast)
            sexy_args_exact="atleast"
            shift
         ;;
         -exact)
            sexy_args_exact="exact"
            shift
         ;;
         -optional)
            sexy_args_exact="optional"
            shift
         ;;
         # Skip previously found parameters
         -skip)
            sexy_args_skip="$(($sexy_args_skip+$sexy_args_next))"
            shift
         ;;
         -*)
            __sexy_exit_err "Unknown sexy argument"
            shift
         ;;
         *)
            break
         ;;
      esac
   done

   # get argument list
   while [ "$1" != "--" ]; do
      eval arg_${count}=\"$1\"
      # unset
      eval $1=""
      arglist="$arglist $1"
      shift
      count=$(($count+1))
   done
 
   # skip at the "--" or more args if -skip is specified
   shift $sexy_args_skip

   # Need the exact number of arguments
   if [ "${sexy_args_exact}" = "exact" -a "$#" -ne "$count" ]; then
      #__sexy_exit_err ${arglist}
      __sexy_exit_err "Wrong number of arguments. Expected $count, got $#"
   # Need at least given number of arguments
   elif [ "${sexy_args_exact}" = "atleast" -a "$#" -lt "$count" ]; then
      #__sexy_exit_err ${arglist}
      __sexy_exit_err "Wrong number of arguments. Expected at least $count, got $#"
   fi

   # assign values
   export sexy_args_next=0
   while [ "$#" -gt 0 -a "$sexy_args_next" -lt "${count}" ]; do
      eval export \$arg_$sexy_args_next=\"$1\"
      shift
      sexy_args_next=$(($sexy_args_next+1))
   done
}

