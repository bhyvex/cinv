#!/bin/dash
#
# I'm the sexy command.
#
# sexy <context> add|del|get|set|help|<action> <id> [--property value]
#
# I am just a wrapper, I'm only usefull together with my plugins which 
# extend my functionality like so:
# ./plugins/<context>/extend/<myname>/<action>
#
# Each of my plugins inherits my generic add, del, get and set actions
# for interacting with my cconfig db.
#
# Each of my plugins also inherits my generic help action which presents
# the help for usage of the plugin in a uniform consistent way.
#
# e.g.
#  $ sexy network get 129.132.186.0
#  runs: ./libexec/get
#  $ sexy network whatever
#  runs: ./plugins/network/extend/sexy/whatever
#

#set -x

DEBUG=
debug() {
   if [ $DEBUG ]; then
      echo "[DEBUG] $@" >&2
   fi
}


command_name="${0##*/}"
bin_dir=$(readlink -n -f "${0%/*}")
export PATH="$bin_dir:$PATH"
base_dir=$(cd "${bin_dir}/../"; pwd)

: ${SEXY_DB_DIR:="${base_dir}/db"}
debug "SEXY_DB_DIR: $SEXY_DB_DIR"

if [ -n "$SEXY_PLUGIN_PATH" ]; then
   SEXY_PLUGIN_PATH="$SEXY_PLUGIN_PATH:${base_dir}/plugins"
else
   SEXY_PLUGIN_PATH="${base_dir}/plugins"
fi


find_plugin_dir() {
   local plugin_name="$1"
   for path in $(echo "$SEXY_PLUGIN_PATH" | sed 's/:/\n/g'); do
      [ -d "$path/$plugin_name" ] && echo "$path/$plugin_name"
   done
}



plugin="$1"; shift
action="$1"; shift

case $action in
   add|del|get|set|help)
      command="$base_dir/libexec/$action"
      ;;
   *)
      plugin_dir=$(find_plugin_dir $plugin)
      debug "plugin_dir: $plugin_dir"
      command="$plugin_dir/extend/$command_name/$action"
      ;;
esac

mkdir -p "$SEXY_DB_DIR"

plugin_db_dir="$SEXY_DB_DIR/$plugin"
debug "plugin_db_dir: $plugin_db_dir"
mkdir -p "$plugin_db_dir"
cd "$plugin_db_dir"

$command "$@"


